{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Jose Pepe Space Hi there! Jose Pepe here. I am a software developer specialized in Backend with experience in agile methodologies and handling most of the software lifecycle. Thank you for your visit, and I will guide you on what you can find in this space: For CV, go here Learning Updates Open-Source contribution updates Entries and blogging","title":"Home"},{"location":"#jose-pepe-space","text":"Hi there! Jose Pepe here. I am a software developer specialized in Backend with experience in agile methodologies and handling most of the software lifecycle. Thank you for your visit, and I will guide you on what you can find in this space: For CV, go here Learning Updates Open-Source contribution updates Entries and blogging","title":"Jose Pepe Space"},{"location":"blog/","text":"Software Development with JP This is under construction, in the coming weeks here will be: Articles about technology Updates on contributions to open source projects","title":"Blog"},{"location":"blog/#software-development-with-jp","text":"This is under construction, in the coming weeks here will be: Articles about technology Updates on contributions to open source projects","title":"Software Development with JP"},{"location":"cv/","text":"Desarrollador Backend JS | Jose Simon Pepe Resumen Desarrollador de software con experiencia en metodolog\u00edas \u00e1giles (XP, Extreme Programming), especializado en BackEnd para aplicaciones web y stand-alone. Capacidad para interactuar con stakeholders, analizar requerimientos, dise\u00f1ar arquitecturas, implementar pruebas automatizadas y gestionar despliegues mediante CI/CD. Experiencia Desarrollador Backend Freelance (2020 - 2025) Desarrollo de una aplicaci\u00f3n inmobiliaria. Desarrollo de una red social. Dise\u00f1o y desarrollo de sitios web para una empresa de envases publicitarios y un programa de ense\u00f1anza de ingl\u00e9s. Contribuciones Open Source: GitHub Tecnolog\u00edas: Backend: JavaScript, Node.js, Python (FastAPI, Django) DevOps & Cloud: AWS, Cloudflare, Linux Manjaro, Git, GitHub Idiomas: Espa\u00f1ol (nativo), Ingl\u00e9s (lectura/escritura para desarrollo, trabajo en equipo en ingl\u00e9s t\u00e9cnico) Referencia: Martin Alga\u00f1araz (Arquitecto de Software) - Tel: +54 9 2236 68-7186 Contacto LinkedIn: Perfil Correo: jose.s.contacto@gmail.com Portafolio: GitHub Blog de estudio y trabajo: Sitio Web N\u00famero: +54 9 11 2401-0760 Ubicaci\u00f3n: AMBA, BSAS, Argentina. Certificaciones T\u00e9cnico en Programaci\u00f3n Web Full Stack - UNAHUR, CeDIT UNLaM, MTESA (18/10/2021 - 02/06/2022) Asuntos Cibern\u00e9ticos con Perspectiva en Ciberseguridad y Ciberdelito - UNLaM (10/08/2022) Educaci\u00f3n Tecnicatura Superior en Desarrollo Web - UNLaM (2020 - 2024) Mentor\u00edas privadas en Arquitectura y Dise\u00f1o de Software - Martin Alga\u00f1araz (Miembro de Equilibrium.io) Aprendizaje continuo en Backend, DevOps y metodolog\u00edas \u00e1giles Filosof\u00eda de Trabajo El trabajo en equipo potencia el \u00e9xito de los proyectos. La presencialidad mejora la comunicaci\u00f3n y la colaboraci\u00f3n. El software debe responder a las necesidades del negocio. Desarrollar software combina creatividad y l\u00f3gica. Es fundamental reconocer cuando se desconoce algo y aprenderlo cuando sea necesario.","title":"CV"},{"location":"cv/#desarrollador-backend-js-jose-simon-pepe","text":"","title":"Desarrollador Backend JS | Jose Simon Pepe"},{"location":"cv/#resumen","text":"Desarrollador de software con experiencia en metodolog\u00edas \u00e1giles (XP, Extreme Programming), especializado en BackEnd para aplicaciones web y stand-alone. Capacidad para interactuar con stakeholders, analizar requerimientos, dise\u00f1ar arquitecturas, implementar pruebas automatizadas y gestionar despliegues mediante CI/CD.","title":"Resumen"},{"location":"cv/#experiencia","text":"Desarrollador Backend Freelance (2020 - 2025) Desarrollo de una aplicaci\u00f3n inmobiliaria. Desarrollo de una red social. Dise\u00f1o y desarrollo de sitios web para una empresa de envases publicitarios y un programa de ense\u00f1anza de ingl\u00e9s. Contribuciones Open Source: GitHub Tecnolog\u00edas: Backend: JavaScript, Node.js, Python (FastAPI, Django) DevOps & Cloud: AWS, Cloudflare, Linux Manjaro, Git, GitHub Idiomas: Espa\u00f1ol (nativo), Ingl\u00e9s (lectura/escritura para desarrollo, trabajo en equipo en ingl\u00e9s t\u00e9cnico) Referencia: Martin Alga\u00f1araz (Arquitecto de Software) - Tel: +54 9 2236 68-7186","title":"Experiencia"},{"location":"cv/#contacto","text":"LinkedIn: Perfil Correo: jose.s.contacto@gmail.com Portafolio: GitHub Blog de estudio y trabajo: Sitio Web N\u00famero: +54 9 11 2401-0760 Ubicaci\u00f3n: AMBA, BSAS, Argentina.","title":"Contacto"},{"location":"cv/#certificaciones","text":"T\u00e9cnico en Programaci\u00f3n Web Full Stack - UNAHUR, CeDIT UNLaM, MTESA (18/10/2021 - 02/06/2022) Asuntos Cibern\u00e9ticos con Perspectiva en Ciberseguridad y Ciberdelito - UNLaM (10/08/2022)","title":"Certificaciones"},{"location":"cv/#educacion","text":"Tecnicatura Superior en Desarrollo Web - UNLaM (2020 - 2024) Mentor\u00edas privadas en Arquitectura y Dise\u00f1o de Software - Martin Alga\u00f1araz (Miembro de Equilibrium.io) Aprendizaje continuo en Backend, DevOps y metodolog\u00edas \u00e1giles","title":"Educaci\u00f3n"},{"location":"cv/#filosofia-de-trabajo","text":"El trabajo en equipo potencia el \u00e9xito de los proyectos. La presencialidad mejora la comunicaci\u00f3n y la colaboraci\u00f3n. El software debe responder a las necesidades del negocio. Desarrollar software combina creatividad y l\u00f3gica. Es fundamental reconocer cuando se desconoce algo y aprenderlo cuando sea necesario.","title":"Filosof\u00eda de Trabajo"},{"location":"learning_roadmap/","text":"Software Development Learning Roadmap Como desarrollador de software con experiencia y orientacion al BackEnd, actualmente estoy ampliando mis conocimientos hacia el desarrollo frontend, especialmente en aplicaciones de una sola p\u00e1gina (SPA). Adem\u00e1s, estoy fortaleciendo mis habilidades en arquitectura de software, incorporando tecnicas y metodologias de DevOps, y comprendiendo el trabajo con tecnolog\u00edas emergentes en la nube y herramientas de inteligencia artificial especialmente self-hosted. Esta es una breve presentacion del plan de estudios que sigo actualmente (2025-02-12): 1. Frontend Development El objetivo aqu\u00ed es dominar las tecnolog\u00edas clave para el desarrollo frontend moderno, desde los fundamentos hasta la creaci\u00f3n de aplicaciones SPA de alta interactividad que soporte web3. Alpine.js: Uso de esta libreria de js para mejorar la interactividad de sitios web. Me ha permitido hidratar documentos que son enviados desde el servidor, en una metodologia conocida como \"Client Side Rendering\". HTML Templating: T\u00e9cnicas para estructurar contenido din\u00e1mico de manera eficiente. Dado que las templates de HTML tienen un DOM especial, estoy comprendiendo como aumenta la reusabilidad y que posibilidades de creacion de Scaffolding permite. SPA (Single Page Applications): Profundizaci\u00f3n en fundamentos de arquitectura web y frameworks para la creaci\u00f3n de aplicaciones din\u00e1micas. No me estoy atando a la manera de hacer las cosas de un Framework, si no que ahora estoy comprendiendo las bases para luego ver como es que los FW pueden ser utiles. Webpack y browserify: Empaquetado y optimizaci\u00f3n de recursos para mejorar la eficiencia de aplicaciones web y su entrega. CSS Generators y dise\u00f1o din\u00e1mico: Herramientas para la generacion autom\u00e1tica de estilos. React: Exploraci\u00f3n y pr\u00e1ctica con uno de los frameworks m\u00e1s usados actualmente para la construcci\u00f3n de interfaces interactivas y SPA. 2. Programaci\u00f3n Web Principios b\u00e1sicos del desarrollo web. (Mucho de esto lo vi en la Universidad) Funcionamiento de los servidores web y navegadores. (Mucho de esto lo veo gracias a la enorme documentacion publica de estas herramientas, por ej la mantenida por WHATWG) 3. Integraci\u00f3n de Pagos Implementaci\u00f3n de pasarelas de pago y transacciones seguras. No solo usar las API de ML o un boiler en Strapi y tenerlo listo, si no comprender las consideraciones desde la arquitectura para evitar problemas en este area crucial. 4. Deployment y Hosting Scaffolding y boilerplate: Generaci\u00f3n de proyectos con buenas pr\u00e1cticas desde el inicio. Despliegue de aplicaciones en Node.js con Render. Cloudinary: Uso del free tier para optimizar la gesti\u00f3n de im\u00e1genes en la nube. Google Cloud Console: Exploraci\u00f3n de servicios en la nube para despliegues escalables. SSH: Uso en tareas de deployment y administraci\u00f3n de servidores. 5. Backend Development Python y Node.js: Profundizaci\u00f3n en estos lenguajes para construir APIs eficientes. Strapi: Uso de este CMS headless para gestionar contenido din\u00e1mico. SQLite: Implementaci\u00f3n y optimizaci\u00f3n de bases de datos ligeras. Webhooks: Integraciones entre sistemas mediante eventos en tiempo real. 6. API y Autenticaci\u00f3n OAuth2: Implementaci\u00f3n de protocolos de autenticaci\u00f3n segura. GraphQL: Exploraci\u00f3n de esta tecnolog\u00eda para mejorar la eficiencia de las APIs. 7. Manejo de Datos y Bases de Datos Entity Frameworks y ORM: T\u00e9cnicas de abstracci\u00f3n para el manejo eficiente de bases de datos. Estructuras de datos y algoritmos: Mejora de la eficiencia en la manipulaci\u00f3n de datos. An\u00e1lisis de comportamiento de usuarios en sitios web. Gesti\u00f3n eficiente de bases de datos como desarrollador. 8. Arquitectura de Software y Herramientas Patrones de arquitectura: Buenas pr\u00e1cticas para el dise\u00f1o de sistemas escalables. Agentes de IA y automatizaci\u00f3n con n8n. SupaBase: Alternativa a Firebase para la gesti\u00f3n de bases de datos en tiempo real. NPM y su ecosistema. Pipeline architecture: Implementaci\u00f3n de procesos de integraci\u00f3n y despliegue continuo. Huly: Exploraci\u00f3n de nuevas herramientas para mejorar la comunicacion con los interesados y equipo. 9. Dise\u00f1o y Redes Brokers y Gateways: Conceptos fundamentales para la comunicaci\u00f3n entre servicios. Proxy y Proxy Inverso: Mejora del rendimiento y seguridad en arquitecturas web. CDN y DNS: Optimizaci\u00f3n de la distribuci\u00f3n de contenido. Dise\u00f1o de sistemas y diagramas de flujo. Principalmente usado con clientes freelance. P2P vs Vendor Locking: Evaluaci\u00f3n de estrategias para evitar la dependencia de proveedores. IDL y esquematizaci\u00f3n de interfaces. 10. DevOps y Herramientas de Infraestructura Terraform: Infraestructura como c\u00f3digo para gestionar recursos en la nube y gestionar vendor-lockin. Kubernetes (k8s): Orquestaci\u00f3n de contenedores para despliegues escalables. Principalmente entender como usarlos para tareas de desarrollo. GitLab CI y GitHub Actions: Automatizaci\u00f3n de procesos de integraci\u00f3n y entrega continua. Principalmente he usado Github Actions. Grafana: Monitoreo y an\u00e1lisis de m\u00e9tricas en tiempo real. Esto es hasta hoy dia mi plan de estudios. Si queres conocer aplicaciones de estos conocimientos, podes visitar mi seccion de 'soluciones creadas' en mi perfil de github","title":"Learning Roadmap"},{"location":"learning_roadmap/#software-development-learning-roadmap","text":"Como desarrollador de software con experiencia y orientacion al BackEnd, actualmente estoy ampliando mis conocimientos hacia el desarrollo frontend, especialmente en aplicaciones de una sola p\u00e1gina (SPA). Adem\u00e1s, estoy fortaleciendo mis habilidades en arquitectura de software, incorporando tecnicas y metodologias de DevOps, y comprendiendo el trabajo con tecnolog\u00edas emergentes en la nube y herramientas de inteligencia artificial especialmente self-hosted. Esta es una breve presentacion del plan de estudios que sigo actualmente (2025-02-12):","title":"Software Development Learning Roadmap"},{"location":"learning_roadmap/#1-frontend-development","text":"El objetivo aqu\u00ed es dominar las tecnolog\u00edas clave para el desarrollo frontend moderno, desde los fundamentos hasta la creaci\u00f3n de aplicaciones SPA de alta interactividad que soporte web3. Alpine.js: Uso de esta libreria de js para mejorar la interactividad de sitios web. Me ha permitido hidratar documentos que son enviados desde el servidor, en una metodologia conocida como \"Client Side Rendering\". HTML Templating: T\u00e9cnicas para estructurar contenido din\u00e1mico de manera eficiente. Dado que las templates de HTML tienen un DOM especial, estoy comprendiendo como aumenta la reusabilidad y que posibilidades de creacion de Scaffolding permite. SPA (Single Page Applications): Profundizaci\u00f3n en fundamentos de arquitectura web y frameworks para la creaci\u00f3n de aplicaciones din\u00e1micas. No me estoy atando a la manera de hacer las cosas de un Framework, si no que ahora estoy comprendiendo las bases para luego ver como es que los FW pueden ser utiles. Webpack y browserify: Empaquetado y optimizaci\u00f3n de recursos para mejorar la eficiencia de aplicaciones web y su entrega. CSS Generators y dise\u00f1o din\u00e1mico: Herramientas para la generacion autom\u00e1tica de estilos. React: Exploraci\u00f3n y pr\u00e1ctica con uno de los frameworks m\u00e1s usados actualmente para la construcci\u00f3n de interfaces interactivas y SPA.","title":"1. Frontend Development"},{"location":"learning_roadmap/#2-programacion-web","text":"Principios b\u00e1sicos del desarrollo web. (Mucho de esto lo vi en la Universidad) Funcionamiento de los servidores web y navegadores. (Mucho de esto lo veo gracias a la enorme documentacion publica de estas herramientas, por ej la mantenida por WHATWG)","title":"2. Programaci\u00f3n Web"},{"location":"learning_roadmap/#3-integracion-de-pagos","text":"Implementaci\u00f3n de pasarelas de pago y transacciones seguras. No solo usar las API de ML o un boiler en Strapi y tenerlo listo, si no comprender las consideraciones desde la arquitectura para evitar problemas en este area crucial.","title":"3. Integraci\u00f3n de Pagos"},{"location":"learning_roadmap/#4-deployment-y-hosting","text":"Scaffolding y boilerplate: Generaci\u00f3n de proyectos con buenas pr\u00e1cticas desde el inicio. Despliegue de aplicaciones en Node.js con Render. Cloudinary: Uso del free tier para optimizar la gesti\u00f3n de im\u00e1genes en la nube. Google Cloud Console: Exploraci\u00f3n de servicios en la nube para despliegues escalables. SSH: Uso en tareas de deployment y administraci\u00f3n de servidores.","title":"4. Deployment y Hosting"},{"location":"learning_roadmap/#5-backend-development","text":"Python y Node.js: Profundizaci\u00f3n en estos lenguajes para construir APIs eficientes. Strapi: Uso de este CMS headless para gestionar contenido din\u00e1mico. SQLite: Implementaci\u00f3n y optimizaci\u00f3n de bases de datos ligeras. Webhooks: Integraciones entre sistemas mediante eventos en tiempo real.","title":"5. Backend Development"},{"location":"learning_roadmap/#6-api-y-autenticacion","text":"OAuth2: Implementaci\u00f3n de protocolos de autenticaci\u00f3n segura. GraphQL: Exploraci\u00f3n de esta tecnolog\u00eda para mejorar la eficiencia de las APIs.","title":"6. API y Autenticaci\u00f3n"},{"location":"learning_roadmap/#7-manejo-de-datos-y-bases-de-datos","text":"Entity Frameworks y ORM: T\u00e9cnicas de abstracci\u00f3n para el manejo eficiente de bases de datos. Estructuras de datos y algoritmos: Mejora de la eficiencia en la manipulaci\u00f3n de datos. An\u00e1lisis de comportamiento de usuarios en sitios web. Gesti\u00f3n eficiente de bases de datos como desarrollador.","title":"7. Manejo de Datos y Bases de Datos"},{"location":"learning_roadmap/#8-arquitectura-de-software-y-herramientas","text":"Patrones de arquitectura: Buenas pr\u00e1cticas para el dise\u00f1o de sistemas escalables. Agentes de IA y automatizaci\u00f3n con n8n. SupaBase: Alternativa a Firebase para la gesti\u00f3n de bases de datos en tiempo real. NPM y su ecosistema. Pipeline architecture: Implementaci\u00f3n de procesos de integraci\u00f3n y despliegue continuo. Huly: Exploraci\u00f3n de nuevas herramientas para mejorar la comunicacion con los interesados y equipo.","title":"8. Arquitectura de Software y Herramientas"},{"location":"learning_roadmap/#9-diseno-y-redes","text":"Brokers y Gateways: Conceptos fundamentales para la comunicaci\u00f3n entre servicios. Proxy y Proxy Inverso: Mejora del rendimiento y seguridad en arquitecturas web. CDN y DNS: Optimizaci\u00f3n de la distribuci\u00f3n de contenido. Dise\u00f1o de sistemas y diagramas de flujo. Principalmente usado con clientes freelance. P2P vs Vendor Locking: Evaluaci\u00f3n de estrategias para evitar la dependencia de proveedores. IDL y esquematizaci\u00f3n de interfaces.","title":"9. Dise\u00f1o y Redes"},{"location":"learning_roadmap/#10-devops-y-herramientas-de-infraestructura","text":"Terraform: Infraestructura como c\u00f3digo para gestionar recursos en la nube y gestionar vendor-lockin. Kubernetes (k8s): Orquestaci\u00f3n de contenedores para despliegues escalables. Principalmente entender como usarlos para tareas de desarrollo. GitLab CI y GitHub Actions: Automatizaci\u00f3n de procesos de integraci\u00f3n y entrega continua. Principalmente he usado Github Actions. Grafana: Monitoreo y an\u00e1lisis de m\u00e9tricas en tiempo real. Esto es hasta hoy dia mi plan de estudios. Si queres conocer aplicaciones de estos conocimientos, podes visitar mi seccion de 'soluciones creadas' en mi perfil de github","title":"10. DevOps y Herramientas de Infraestructura"},{"location":"opensource_contribution/","text":"","title":"OpenSource"}]}